// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/wafer-bw/discobottest/app/models"
)

// SlashCommands is an autogenerated mock type for the SlashCommands type
type SlashCommands struct {
	mock.Mock
}

// ListGlobalApplicationCommands provides a mock function with given fields:
func (_m *SlashCommands) ListGlobalApplicationCommands() ([]*models.ApplicationCommand, error) {
	ret := _m.Called()

	var r0 []*models.ApplicationCommand
	if rf, ok := ret.Get(0).(func() []*models.ApplicationCommand); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.ApplicationCommand)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListGuildApplicationCommands provides a mock function with given fields: guildID
func (_m *SlashCommands) ListGuildApplicationCommands(guildID string) ([]*models.ApplicationCommand, error) {
	ret := _m.Called(guildID)

	var r0 []*models.ApplicationCommand
	if rf, ok := ret.Get(0).(func(string) []*models.ApplicationCommand); ok {
		r0 = rf(guildID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.ApplicationCommand)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(guildID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
